#0 此题较为简单
class Solution:
    def maxSlidingWindow(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: List[int]
        """
        if not nums:
            return []
        ans = []
        for i in range(0, len(nums)-k+1):
            ans.append(max(nums[i:i+k]))
        return ans
        
#1 速度第一的方法，想了想，确实很精妙,分间隔中间部分和首尾部分；因为每次向右移动一格，所以考虑上一步最大的是否在首尾，如果不在不用管
class Solution:
    def maxSlidingWindow(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: List[int]
        """
        if not nums:
            return []
        ans = []
        last = -1
        for i in range(len(nums)-k+1): 
            if last < i:  #首
                last = i
                for j in range(i, i+k):
                    if nums[j] > nums[last]:
                        last = j
            if nums[i+k-1] > nums[last]: # 尾
                last = i + k -1
            ans.append(nums[last])
        return ans
