#0 自己的排列组合法，m+n-2 C n-1; 花的时间较多
        def factorial(x):  # 定义一个阶乘
            if x == 0:
                return 1
            elif x == 1:
                return 1
            else:
                return x * factorial(x-1)
        return int(factorial(m + n - 2) / factorial(m-1) / factorial(n-1))
        
#1 动态规划法； O(m*n) space
def uniquePaths2(self, m, n):
    if not m or not n:
        return 0
    dp = [[1 for _ in range(n)] for _ in range(m)]  # 生成一个二维矩阵
    for i in range(1, m):
        for j in range(1, n):
            dp[i][j] = dp[i-1][j] + dp[i][j-1]  # 核心算法，很好理解
    return dp[-1][-1]

#2 O(n)space动态规划； 只需要记录当前表格上一行与上一列的数据即可； 用一组n列的向量来记录即可
def uniquePaths(self, m, n):
    if not m or not n:
        return 0
    cur = [1] * n  # 第1列、第1行全为1
    for i in range(1, m):
        for j in range(1, n):
            cur[j] += cur[j-1] # 待求行列数等于同列上一行cur[j]加上同行上一列cur[j-1]递归
    return cur[-1]
